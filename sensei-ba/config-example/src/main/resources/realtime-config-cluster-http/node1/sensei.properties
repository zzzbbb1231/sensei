# sensei node parameters
sensei.node.id=1
sensei.node.partitions=0

# sensei network server parameters
sensei.server.port=12212
sensei.server.requestThreadCorePoolSize=20
sensei.server.requestThreadMaxPoolSize=70
sensei.server.requestThreadKeepAliveTimeSecs=300
sensei.index.manager.default.maxpartition.id = 1
# sensei cluster parameters
sensei.cluster.name=realtimeHttp2NodeCluster
sensei.cluster.client-name=realtimeHttp2NodeClusterClient1
sensei.cluster.url=localhost:2181
sensei.cluster.timeout=30000

# sensei indexing parameters
sensei.index.directory=/tmp/realtimeIndexHttp/test1
sensei.indexer.type=indexingCoordinator
indexingCoordinator.class=com.senseidb.ba.realtime.indexing.IndexingCoordinator
indexingCoordinator.dataProvider=dataProvider
indexingCoordinator.clusterName=cluster
indexingCoordinator.numServingPartitions=6
# By reaching this limit the realtime segment is sorted and flushed to disk 
indexingCoordinator.capacity=5000
#Time in millis that designates refresh rate
indexingCoordinator.refreshTime=1000
#The number of events that would cause the realtime index to refresh
indexingCoordinator.bufferSize=2000
# The segment would be sorted based on this columns to speed up search
indexingCoordinator.sortedColumns= id, category
indexingCoordinator.retention.timeUnit=DAYS
indexingCoordinator.retention.duration=15
indexingCoordinator.shardedColumn=id

#Where to store flushed indexes
#Possible values: Heap, MemoryMapped, DirectMemory
indexingCoordinator.readMode=Heap

dataProvider.class=com.senseidb.ba.realtime.indexing.providers.HttpDataProvider
dataProvider.port=9094
sensei.query.builder.factory.class=com.senseidb.ba.plugins.ZeusQueryBuilderFactory
sensei.index.interpreter.class=com.senseidb.search.node.NoOpIndexableInterpreter
sensei.mapreduce.accessor.factory.class=com.senseidb.ba.mapred.BaFieldAccessorFactory
sensei.request.postrocessor.class=com.senseidb.ba.plugins.BARequestPostProcessor
# index manager parameters
sensei.index.pruner.class=com.senseidb.ba.plugins.BAIndexPruner

# analyzer, default: StandardAnalyzer
# sensei.index.analyzer = myanalyzer

# similarity, default: DefaultSimilarity
# sensei.index.similarity = mysimilarity

# broker properties
sensei.broker.port = 8076
sensei.broker.minThread = 50
sensei.broker.maxThread = 100
sensei.broker.maxWaittime = 2000

sensei.broker.webapp.path=config/webapp
sensei.search.cluster.name = realtimeHttp2NodeCluster
sensei.search.cluster.client-name = realtimeHttp2NodeClusterClient1
sensei.search.cluster.zookeeper.url = localhost:2181
sensei.search.cluster.zookeeper.conn.timeout = 30000


sensei.index.manager.class=com.senseidb.ba.plugins.DummyIndexingManager
realtime.core.service.class=com.senseidb.ba.plugins.RealtimeCoreSenseiService
realtime.sys.service.class=com.senseidb.ba.plugins.RealtimeSysSenseiService
custom.plugins.spring.class=com.senseidb.conf.SpringSenseiPluginFactory
custom.plugins.spring.returnedClass=com.senseidb.svc.impl.AbstractSenseiCoreService
custom.plugins.spring.springFile=plugins.xml
sensei.plugin.services.list=custom.plugins.spring, realtime.core.service,realtime.sys.service
sensei.search.pluggableEngines.list=realtime.core.service,realtime.sys.service
custom.facets.spring.class=com.senseidb.conf.SpringSenseiPluginFactory
custom.facets.spring.returnedClass=com.browseengine.bobo.facets.FacetHandler, com.browseengine.bobo.facets.RuntimeFacetHandlerFactory
custom.facets.spring.springFile=custom-facets.xml
# the list of beans might be referenced both by simple name and the full prefix
sensei.custom.facets.list= custom.facets.spring

